- name: Generate Blog Post Content
      id: generate_content
      env:
        HF_API_KEY: ${{ secrets.HF_API_KEY }}
      run: |
        PROMPT="Write a detailed, engaging blog post about AI trends in 2025."
        MODEL_URL="https://api-inference.huggingface.co/models/tiiuae/falcon-7b-instruct"
        FALLBACK_URL="https://api-inference.huggingface.co/models/google/flan-t5-large"

        echo "Generating full blog post content..."
        
        # Try primary model
        RESPONSE=$(curl -s -w "%{http_code}" -o response.json -X POST "$MODEL_URL" \
          -H "Authorization: Bearer $HF_API_KEY" \
          -H "Content-Type: application/json" \
          -d "{\"inputs\":\"$PROMPT\",\"parameters\":{\"max_length\":400}}")

        if [ "$RESPONSE" -eq 404 ]; then
          echo "⚠️ Primary model not found or not accessible. Falling back to public model..."
          RESPONSE=$(curl -s -X POST "$FALLBACK_URL" \
            -H "Authorization: Bearer $HF_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"inputs\":\"$PROMPT\",\"parameters\":{\"max_length\":400}}")
        else
          RESPONSE=$(cat response.json)
        fi

        # Check if JSON is valid
        if ! echo "$RESPONSE" | jq . >/dev/null 2>&1; then
          echo "❌ Hugging Face API returned invalid JSON:"
          echo "$RESPONSE"
          exit 1
        fi

        CONTENT=$(echo "$RESPONSE" | jq -r 'if type=="array" then .[0].generated_text else .error end')

        if [[ "$CONTENT" == *"error"* ]]; then
          echo "❌ Error from Hugging Face API: $CONTENT"
          exit 1
        fi

        echo "::set-output name=content::$CONTENT"
